name: CI with Dynatrace Integration

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout Code
      - name: Checkout source
        uses: actions/checkout@v3

      # 2. Setup Node.js (adjust for your stack)
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # 3. Install Dependencies
      - name: Install dependencies
        run: npm install

      # 4. Run Unit Tests
      - name: Run tests
        run: npm test

      # 5. Notify Dynatrace of Deployment
      - name: Send deployment event to Dynatrace
        env:
          DT_API_TOKEN: ${{ secrets.DT_API_TOKEN }}
          DT_ENV_URL: ${{ secrets.DT_ENV_URL }}
        run: |
          curl -X POST "$DT_ENV_URL/api/v2/events/ingest" \
          -H "Authorization: Api-Token $DT_API_TOKEN" \
          -H "Content-Type: application/json" \
          -d "{
                \"eventType\": \"CUSTOM_DEPLOYMENT\",
                \"title\": \"New Build Deployed\",
                \"entitySelector\": \"type(SERVICE),tag(my-service)\",
                \"properties\": {
                  \"buildNumber\": \"${{ github.run_number }}\",
                  \"commit\": \"${{ github.sha }}\",
                  \"branch\": \"${{ github.ref_name }}\"
                }
              }"

      # 6. Validate Deployment via Dynatrace DQL
      - name: Run health check query
        env:
          DT_API_TOKEN: ${{ secrets.DT_API_TOKEN }}
          DT_ENV_URL: ${{ secrets.DT_ENV_URL }}
        run: |
          QUERY='fetch logs | filter contains(text, "ERROR") | summarize count()'
          RESPONSE=$(curl -s -X POST "$DT_ENV_URL/api/v2/query:execute" \
            -H "Authorization: Api-Token $DT_API_TOKEN" \
            -H "Content-Type: application/json" \
            -d "{ \"query\": \"$QUERY\" }")
          ERRORS=$(echo $RESPONSE | jq '.result.records[0].count // 0')

          echo "Errors detected: $ERRORS"
          if [ "$ERRORS" -gt 0 ]; then
            echo "❌ Errors found in logs, failing build..."
            exit 1
          else
            echo "✅ No critical errors found in Dynatrace logs."
          fi
